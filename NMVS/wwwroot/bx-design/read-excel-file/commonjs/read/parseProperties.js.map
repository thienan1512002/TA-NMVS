{"version":3,"sources":["../../source/read/parseProperties.js"],"names":["parseProperties","content","xml","book","createDocument","properties","workbookProperties","getAttribute","epoch1904","sheets","addSheetInfo","sheet","push","id","name","relationId","forEach"],"mappings":";;;;;;;AAAA;;AAKA;AACe,SAASA,eAAT,CAAyBC,OAAzB,EAAkCC,GAAlC,EAAuC;AACpD,MAAMC,IAAI,GAAGD,GAAG,CAACE,cAAJ,CAAmBH,OAAnB,CAAb;AAEA,MAAMI,UAAU,GAAG,EAAnB,CAHoD,CAKpD;AACA;AACA;;AAEA,MAAMC,kBAAkB,GAAG,iCAAsBH,IAAtB,CAA3B;;AAEA,MAAIG,kBAAkB,IAAIA,kBAAkB,CAACC,YAAnB,CAAgC,UAAhC,MAAgD,GAA1E,EAA+E;AAC7EF,IAAAA,UAAU,CAACG,SAAX,GAAuB,IAAvB;AACD,GAbmD,CAepD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAH,EAAAA,UAAU,CAACI,MAAX,GAAoB,EAApB;;AAEA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC9B,QAAIA,KAAK,CAACJ,YAAN,CAAmB,MAAnB,CAAJ,EAAgC;AAC9BF,MAAAA,UAAU,CAACI,MAAX,CAAkBG,IAAlB,CAAuB;AACrBC,QAAAA,EAAE,EAAEF,KAAK,CAACJ,YAAN,CAAmB,SAAnB,CADiB;AAErBO,QAAAA,IAAI,EAAEH,KAAK,CAACJ,YAAN,CAAmB,MAAnB,CAFe;AAGrBQ,QAAAA,UAAU,EAAEJ,KAAK,CAACJ,YAAN,CAAmB,MAAnB;AAHS,OAAvB;AAKD;AACF,GARD;;AAUA,uBAAUJ,IAAV,EAAgBa,OAAhB,CAAwBN,YAAxB;AAEA,SAAOL,UAAP;AACD","sourcesContent":["import {\n  getWorkbookProperties,\n  getSheets\n} from '../xml/xlsx'\n\n// I guess `xl/workbook.xml` file should always be present inside the *.xlsx archive.\nexport default function parseProperties(content, xml) {\n  const book = xml.createDocument(content)\n\n  const properties = {};\n\n  // Read `<workbookPr/>` element to detect whether dates are 1900-based or 1904-based.\n  // https://support.microsoft.com/en-gb/help/214330/differences-between-the-1900-and-the-1904-date-system-in-excel\n  // http://webapp.docx4java.org/OnlineDemo/ecma376/SpreadsheetML/workbookPr.html\n\n  const workbookProperties = getWorkbookProperties(book)\n\n  if (workbookProperties && workbookProperties.getAttribute('date1904') === '1') {\n    properties.epoch1904 = true\n  }\n\n  // Get sheets info (indexes, names, if they're available).\n  // Example:\n  // <sheets>\n  //   <sheet\n  //     xmlns:ns=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\"\n  //     name=\"Sheet1\"\n  //     sheetId=\"1\"\n  //     ns:id=\"rId3\"/>\n  // </sheets>\n  // http://www.datypic.com/sc/ooxml/e-ssml_sheet-1.html\n\n  properties.sheets = []\n\n  const addSheetInfo = (sheet) => {\n    if (sheet.getAttribute('name')) {\n      properties.sheets.push({\n        id: sheet.getAttribute('sheetId'),\n        name: sheet.getAttribute('name'),\n        relationId: sheet.getAttribute('r:id')\n      })\n    }\n  }\n\n  getSheets(book).forEach(addSheetInfo)\n\n  return properties;\n}"],"file":"parseProperties.js"}