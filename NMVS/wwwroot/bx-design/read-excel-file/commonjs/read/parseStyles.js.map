{"version":3,"sources":["../../source/read/parseStyles.js"],"names":["parseStyles","content","xml","doc","createDocument","baseStyles","map","parseCellStyle","numberFormats","parseNumberFormatStyle","reduce","formats","format","id","getCellStyle","xf","hasAttribute","xfId","numFmt","getAttribute","template","numFmts","style","numberFormatId","numberFormat"],"mappings":";;;;;;;AAAA;;;;;;;;AAMA;AACA;AACA;AACe,SAASA,WAAT,CAAqBC,OAArB,EAA8BC,GAA9B,EAAmC;AAChD,MAAI,CAACD,OAAL,EAAc;AACZ,WAAO,EAAP;AACD,GAH+C,CAKhD;AACA;;;AACA,MAAME,GAAG,GAAGD,GAAG,CAACE,cAAJ,CAAmBH,OAAnB,CAAZ;AAEA,MAAMI,UAAU,GAAG,yBAAcF,GAAd,EAChBG,GADgB,CACZC,cADY,CAAnB;AAGA,MAAMC,aAAa,GAAG,4BAAiBL,GAAjB,EACnBG,GADmB,CACfG,sBADe,EAEnBC,MAFmB,CAEZ,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC3B;AACA;AACAD,IAAAA,OAAO,CAACC,MAAM,CAACC,EAAR,CAAP,GAAqBD,MAArB;AACA,WAAOD,OAAP;AACD,GAPmB,EAOjB,EAPiB,CAAtB;;AASA,MAAMG,YAAY,GAAG,SAAfA,YAAe,CAACC,EAAD,EAAQ;AAC3B,QAAIA,EAAE,CAACC,YAAH,CAAgB,MAAhB,CAAJ,EAA6B;AAC3B,6CACKX,UAAU,CAACU,EAAE,CAACE,IAAJ,CADf,GAEKV,cAAc,CAACQ,EAAD,EAAKP,aAAL,CAFnB;AAID;;AACD,WAAOD,cAAc,CAACQ,EAAD,EAAKP,aAAL,CAArB;AACD,GARD;;AAUA,SAAO,yBAAcL,GAAd,EAAmBG,GAAnB,CAAuBQ,YAAvB,CAAP;AACD;;AAED,SAASL,sBAAT,CAAgCS,MAAhC,EAAwC;AACtC,SAAO;AACLL,IAAAA,EAAE,EAAEK,MAAM,CAACC,YAAP,CAAoB,UAApB,CADC;AAELC,IAAAA,QAAQ,EAAEF,MAAM,CAACC,YAAP,CAAoB,YAApB;AAFL,GAAP;AAID,C,CAED;;;AACA,SAASZ,cAAT,CAAwBQ,EAAxB,EAA4BM,OAA5B,EAAqC;AACnC,MAAMC,KAAK,GAAG,EAAd;;AACA,MAAIP,EAAE,CAACC,YAAH,CAAgB,UAAhB,CAAJ,EAAiC;AAC/B,QAAMO,cAAc,GAAGR,EAAE,CAACI,YAAH,CAAgB,UAAhB,CAAvB,CAD+B,CAE/B;AACA;;AACA,QAAIE,OAAO,CAACE,cAAD,CAAX,EAA6B;AAC3BD,MAAAA,KAAK,CAACE,YAAN,GAAqBH,OAAO,CAACE,cAAD,CAA5B;AACD,KAFD,MAEO;AACLD,MAAAA,KAAK,CAACE,YAAN,GAAqB;AAAEX,QAAAA,EAAE,EAAEU;AAAN,OAArB;AACD;AACF;;AACD,SAAOD,KAAP;AACD","sourcesContent":["import {\n  getBaseStyles,\n  getCellStyles,\n  getNumberFormats\n} from '../xml/xlsx'\n\n// http://officeopenxml.com/SSstyles.php\n// Returns an array of cell styles.\n// A cell style index is its ID.\nexport default function parseStyles(content, xml) {\n  if (!content) {\n    return {}\n  }\n\n  // https://social.msdn.microsoft.com/Forums/sqlserver/en-US/708978af-b598-45c4-a598-d3518a5a09f0/howwhen-is-cellstylexfs-vs-cellxfs-applied-to-a-cell?forum=os_binaryfile\n  // https://www.office-forums.com/threads/cellxfs-cellstylexfs.2163519/\n  const doc = xml.createDocument(content)\n\n  const baseStyles = getBaseStyles(doc)\n    .map(parseCellStyle)\n\n  const numberFormats = getNumberFormats(doc)\n    .map(parseNumberFormatStyle)\n    .reduce((formats, format) => {\n      // Format ID is a numeric index.\n      // There're some standard \"built-in\" formats (in Excel) up to about `100`.\n      formats[format.id] = format\n      return formats\n    }, [])\n\n  const getCellStyle = (xf) => {\n    if (xf.hasAttribute('xfId')) {\n      return {\n        ...baseStyles[xf.xfId],\n        ...parseCellStyle(xf, numberFormats)\n      }\n    }\n    return parseCellStyle(xf, numberFormats)\n  }\n\n  return getCellStyles(doc).map(getCellStyle)\n}\n\nfunction parseNumberFormatStyle(numFmt) {\n  return {\n    id: numFmt.getAttribute('numFmtId'),\n    template: numFmt.getAttribute('formatCode')\n  }\n}\n\n// http://www.datypic.com/sc/ooxml/e-ssml_xf-2.html\nfunction parseCellStyle(xf, numFmts) {\n  const style = {}\n  if (xf.hasAttribute('numFmtId')) {\n    const numberFormatId = xf.getAttribute('numFmtId')\n    // Built-in number formats don't have a `<numFmt/>` element in `styles.xml`.\n    // https://hexdocs.pm/xlsxir/number_styles.html\n    if (numFmts[numberFormatId]) {\n      style.numberFormat = numFmts[numberFormatId]\n    } else {\n      style.numberFormat = { id: numberFormatId }\n    }\n  }\n  return style\n}"],"file":"parseStyles.js"}