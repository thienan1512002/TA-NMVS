{"version":3,"sources":["../../source/read/readXlsxFileNode.js"],"names":["readXlsxFile","input","options","then","entries","xml"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASA,YAAT,CAAsBC,KAAtB,EAA2C;AAAA,MAAdC,OAAc,uEAAJ,EAAI;AACzD,SAAO,oCAAeD,KAAf,EACLE,IADK,CACA,UAACC,OAAD;AAAA,WAAa,sCAAqBA,OAArB,EAA8BC,mBAA9B,EAAmCH,OAAnC,CAAb;AAAA,GADA,CAAP;AAEA","sourcesContent":["import xml from '../xml/xmlNode'\n\nimport unpackXlsxFile from './unpackXlsxFileNode'\nimport readXlsxFileContents from './readXlsxFileContents'\n\n/**\n * Reads XLSX file into a 2D array of cells in a browser.\n * @param  {(string|Stream|Buffer)} input - A Node.js readable stream or a `Buffer` or a path to a file.\n * @param  {object?} options\n * @param  {(number|string)?} options.sheet - Excel document sheet to read. Defaults to `1`. Will only read this sheet and skip others.\n * @return {Promise} Resolves to a 2D array of cells: an array of rows, each row being an array of cells.\n */\nexport default function readXlsxFile(input, options = {}) {\n\treturn unpackXlsxFile(input)\n\t\t.then((entries) => readXlsxFileContents(entries, xml, options))\n}"],"file":"readXlsxFileNode.js"}