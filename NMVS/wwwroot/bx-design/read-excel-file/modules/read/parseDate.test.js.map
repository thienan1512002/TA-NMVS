{"version":3,"sources":["../../source/read/parseDate.test.js"],"names":["parseDate","describe","it","date","convertToUTCTimezone","Date","getTime","should","equal","getTimezoneOffset"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,aAAtB;AAEAC,QAAQ,CAAC,WAAD,EAAc,YAAM;AAC3BC,EAAAA,EAAE,CAAC,mCAAD,EAAsC,YAAM;AAC7C,QAAMC,IAAI,GAAGC,oBAAoB,CAAC,IAAIC,IAAJ,CAAS,IAAT,EAAe,IAAI,CAAnB,EAAsB,EAAtB,CAAD,CAAjC,CAD6C,CAE3C;AACA;;AACFL,IAAAA,SAAS,CAAC,KAAD,CAAT,CAAiBM,OAAjB,GAA2BC,MAA3B,CAAkCC,KAAlC,CAAwCL,IAAI,CAACG,OAAL,EAAxC;AACA,GALC,CAAF;AAMA,CAPO,CAAR,C,CASA;;AACA,SAASF,oBAAT,CAA8BD,IAA9B,EAAoC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,SAAO,IAAIE,IAAJ,CAASF,IAAI,CAACG,OAAL,KAAiBH,IAAI,CAACM,iBAAL,KAA2B,EAA3B,GAAgC,IAA1D,CAAP;AACA","sourcesContent":["import parseDate from './parseDate'\n\ndescribe('parseDate', () => {\n\tit('should parse Excel \"serial\" dates', () => {\n\t\tconst date = convertToUTCTimezone(new Date(2018, 3 - 1, 24))\n    // Excel stores dates as integers.\n    // E.g. '24/03/2018' === 43183\n\t\tparseDate(43183).getTime().should.equal(date.getTime())\n\t})\n})\n\n// Converts timezone to UTC while preserving the same time\nfunction convertToUTCTimezone(date) {\n\t// Doesn't account for leap seconds but I guess that's ok\n\t// given that javascript's own `Date()` does not either.\n\t// https://www.timeanddate.com/time/leap-seconds-background.html\n\t//\n\t// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Date/getTimezoneOffset\n\t//\n\treturn new Date(date.getTime() - date.getTimezoneOffset() * 60 * 1000)\n}\n"],"file":"parseDate.test.js"}