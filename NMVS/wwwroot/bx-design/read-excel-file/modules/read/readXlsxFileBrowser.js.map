{"version":3,"sources":["../../source/read/readXlsxFileBrowser.js"],"names":["xml","unpackXlsxFile","readXlsxFileContents","readXlsxFile","file","options","then","entries"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,mBAAhB;AAEA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,YAAT,CAAsBC,IAAtB,EAA0C;AAAA,MAAdC,OAAc,uEAAJ,EAAI;AACxD,SAAOJ,cAAc,CAACG,IAAD,CAAd,CACLE,IADK,CACA,UAACC,OAAD;AAAA,WAAaL,oBAAoB,CAACK,OAAD,EAAUP,GAAV,EAAeK,OAAf,CAAjC;AAAA,GADA,CAAP;AAEA","sourcesContent":["import xml from '../xml/xmlBrowser'\n\nimport unpackXlsxFile from './unpackXlsxFileBrowser'\nimport readXlsxFileContents from './readXlsxFileContents'\n\n/**\n * Reads XLSX file into a 2D array of cells in a browser.\n * @param  {file} file - A file being uploaded in the browser.\n * @param  {object?} options\n * @param  {(number|string)?} options.sheet - Excel document sheet to read. Defaults to `1`. Will only read this sheet and skip others.\n * @return {Promise} Resolves to a 2D array of cells: an array of rows, each row being an array of cells.\n */\nexport default function readXlsxFile(file, options = {}) {\n\treturn unpackXlsxFile(file)\n\t\t.then((entries) => readXlsxFileContents(entries, xml, options))\n}"],"file":"readXlsxFileBrowser.js"}