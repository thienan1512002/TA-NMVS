{"version":3,"sources":["../../source/xml/xlsx.js"],"names":["findChild","findChildren","forEach","map","getTagName","getCells","document","worksheet","documentElement","sheetData","cells","row","cell","push","getMergedCells","mergedCells","mergedCellsInfo","mergedCell","getAttribute","getCellValue","node","getCellInlineStringValue","firstChild","textContent","getDimensions","dimensions","getBaseStyles","styleSheet","cellStyleXfs","getCellStyles","cellXfs","getNumberFormats","numberFormats","numFmts","getSharedStrings","sst","string","t","value","r","getWorkbookProperties","workbook","getRelationships","relationships","getSheets","sheets"],"mappings":"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","sourcesContent":["import { findChild, findChildren, forEach, map, getTagName } from './dom'\n\nexport function getCells(document) {\n  const worksheet = document.documentElement\n  const sheetData = findChild(worksheet, 'sheetData')\n  const cells = []\n  forEach(sheetData, 'row', (row) => {\n    forEach(row, 'c', (cell) => {\n      cells.push(cell)\n    })\n  })\n  return cells\n}\n\nexport function getMergedCells(document) {\n  const worksheet = document.documentElement\n  const mergedCells = findChild(worksheet, 'mergeCells')\n  const mergedCellsInfo = []\n  if (mergedCells) {\n    forEach(mergedCells, 'mergeCell', (mergedCell) => {\n      mergedCellsInfo.push(mergedCell.getAttribute('ref'))\n    })\n  }\n  return mergedCellsInfo\n}\n\nexport function getCellValue(document, node) {\n  return findChild(node, 'v')\n}\n\nexport function getCellInlineStringValue(document, node) {\n  if (node.firstChild &&\n    getTagName(node.firstChild) === 'is' &&\n    node.firstChild.firstChild &&\n    getTagName(node.firstChild.firstChild) === 't') {\n    return node.firstChild.firstChild.textContent\n  }\n}\n\nexport function getDimensions(document) {\n  const worksheet = document.documentElement\n  const dimensions = findChild(worksheet, 'dimension')\n  if (dimensions) {\n    return dimensions.getAttribute('ref')\n  }\n}\n\nexport function getBaseStyles(document) {\n  const styleSheet = document.documentElement\n  const cellStyleXfs = findChild(styleSheet, 'cellStyleXfs')\n  if (cellStyleXfs) {\n    return findChildren(cellStyleXfs, 'xf')\n  }\n  return []\n}\n\nexport function getCellStyles(document) {\n  const styleSheet = document.documentElement\n  const cellXfs = findChild(styleSheet, 'cellXfs')\n  if (!cellXfs) {\n    return []\n  }\n  return findChildren(cellXfs, 'xf')\n}\n\nexport function getNumberFormats(document) {\n  const styleSheet = document.documentElement\n  let numberFormats = []\n  const numFmts = findChild(styleSheet, 'numFmts')\n  if (numFmts) {\n    return findChildren(numFmts, 'numFmt')\n  }\n  return []\n}\n\nexport function getSharedStrings(document) {\n\t// An `<si/>` element can contain a `<t/>` (simplest case) or a set of `<r/>` (\"rich formatting\") elements having `<t/>`.\n\t// https://docs.microsoft.com/en-us/dotnet/api/documentformat.openxml.spreadsheet.sharedstringitem?redirectedfrom=MSDN&view=openxml-2.8.1\n\t// http://www.datypic.com/sc/ooxml/e-ssml_si-1.html\n\n  const sst = document.documentElement\n  return map(sst, 'si', string => {\n    const t = findChild(string, 't')\n    if (t) {\n      return t.textContent\n    }\n    let value = ''\n    forEach(string, 'r', (r) => {\n      value += findChild(r, 't').textContent\n    })\n    return value\n  })\n}\n\nexport function getWorkbookProperties(document) {\n  const workbook = document.documentElement\n  return findChild(workbook, 'workbookPr')\n}\n\nexport function getRelationships(document) {\n  const relationships = document.documentElement\n  return findChildren(relationships, 'Relationship')\n}\n\nexport function getSheets(document) {\n  const workbook = document.documentElement\n  const sheets = findChild(workbook, 'sheets')\n  return findChildren(sheets, 'sheet')\n}"],"file":"xlsx.js"}